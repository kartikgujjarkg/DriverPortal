spring.datasource.url=jdbc:mysql://localhost:3306/uber?useSSL=false
spring.datasource.username=root
spring.datasource.password=kartik123
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

#kafka
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: driverGroup
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=verification:com.example.demo.entity.Verification

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=verification:com.example.demo.entity.Verification,diver:com.example.demo.entity.Driver

kafkaTaskTopic = tasktoverify1

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200KB
# Max Request Size
spring.servlet.multipart.max-request-size=200KB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=Users\\spoorthikartik\\Documents\\FileUploads




